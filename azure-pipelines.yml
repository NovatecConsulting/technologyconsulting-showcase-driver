
# Build a Docker image 
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  containerimagetag: '$(Build.SourceVersion)'
  containerregistry: 'nttcshowcase.azurecr.io'
  containerimagerepository: 'technologyconsulting-showcase-driver'
  containerregistryserviceconnection: 'acr-sc'      

stages:
- stage: Build_and_Test
  displayName: Build image trough compose and run
  jobs:  
  - job: Compose
    displayName: Compose up
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: CmdLine@2
      inputs:
        script: 'chmod +x bin/single.sh'
    - task: DockerCompose@0
      inputs:
        action: 'Build services'
        containerregistrytype: 'dockerregistry'
        dockerRegistryEndpoint: $(containerregistryserviceconnection)
        azureContainerRegistry: $(containerimagerepository)
        dockerComposeFile: '**/docker-compose.yml'
        serviceName: $(containerimagerepository)     
        additionalImageTags: $(containerimagetag)
    - task: DockerCompose@0
      inputs:
        action: 'Run services'
        containerregistrytype: 'dockerregistry'
        dockerRegistryEndpoint: $(containerregistryserviceconnection)
        azureContainerRegistry: $(containerimagerepository)
        dockerComposeFile: '**/docker-compose.yml'
        detached: false
        serviceName: $(containerimagerepository)
    - task: DockerCompose@0
      inputs:
        action: 'Push services'
        containerregistrytype: 'dockerregistry'
        dockerRegistryEndpoint: $(containerregistryserviceconnection)
        azureContainerRegistry: $(containerimagerepository)
        dockerComposeFile: '**/docker-compose.yml'
        includeLatestTag: false
        detached: false
        additionalImageTags: $(containerimagetag)
- stage: deploy
  displayName: Deploy app
  jobs:
  - job: getSecrets
    displayName: get Secrets and deploy
    steps:      
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'Practice-Area-TC-Dev(95352c54-cee5-4d25-a9a1-0857616d97e5)'
        KeyVaultName: 'vault-tc-showcase-prod'
        SecretsFilter: 'containerregistry-pullsecret'
        RunAsPreJob: true
    - task: AzureKeyVault@1
      inputs:
        azureSubscription: 'Practice-Area-TC-Dev(95352c54-cee5-4d25-a9a1-0857616d97e5)'
        KeyVaultName: 'vault-tc-showcase-prod'
        SecretsFilter: '*'
        RunAsPreJob: true    

    - task: HelmDeploy@0
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscription: 'Practice-Area-TC-Dev(95352c54-cee5-4d25-a9a1-0857616d97e5)'
        azureResourceGroup: 'tc-showcase-prod'
        kubernetesCluster: 'k8s-tc-showcase-prod'
        namespace: 'driver'
        command: 'upgrade'
        chartType: 'FilePath'
        chartPath: './k8s/'
        releaseName: 'driver'
        valueFile: './k8s/values.yaml'
        overrideValues: 'app.image.pullsecret=$(containerregistry-pullsecret),app.image.tag=$(containerimagetag),app.image.repository=$(containerregistry)/$(containerimagerepository),app.azureconfig.resourcegroup="tc-showcase-prod" '
        resetValues: true
        force: false        